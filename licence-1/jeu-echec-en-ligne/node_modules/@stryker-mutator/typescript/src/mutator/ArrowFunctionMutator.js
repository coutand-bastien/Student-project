"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ts = require("typescript");
var NodeMutator_1 = require("./NodeMutator");
var ArrowFunctionMutator = /** @class */ (function (_super) {
    tslib_1.__extends(ArrowFunctionMutator, _super);
    function ArrowFunctionMutator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = 'ArrowFunction';
        return _this;
    }
    ArrowFunctionMutator.prototype.guard = function (node) {
        return node.kind === ts.SyntaxKind.ArrowFunction;
    };
    ArrowFunctionMutator.prototype.identifyReplacements = function (fn) {
        if (fn.body.kind === ts.SyntaxKind.Block) {
            // This case is already handled by the BlockMutator.
            return [];
        }
        return [{ node: fn, replacement: '() => undefined' }];
    };
    return ArrowFunctionMutator;
}(NodeMutator_1.default));
exports.default = ArrowFunctionMutator;
//# sourceMappingURL=ArrowFunctionMutator.js.map