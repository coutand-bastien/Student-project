"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var _a;
var ts = require("typescript");
var NodeMutator_1 = require("./NodeMutator");
var replaceTokens = (_a = {},
    _a[ts.SyntaxKind.PlusToken] = ['-'],
    _a[ts.SyntaxKind.MinusToken] = ['+'],
    _a[ts.SyntaxKind.SlashToken] = ['*'],
    _a[ts.SyntaxKind.AsteriskToken] = ['/'],
    _a[ts.SyntaxKind.PercentToken] = ['*'],
    _a[ts.SyntaxKind.LessThanToken] = ['<=', '>='],
    _a[ts.SyntaxKind.LessThanEqualsToken] = ['<', '>'],
    _a[ts.SyntaxKind.GreaterThanToken] = ['<=', '>='],
    _a[ts.SyntaxKind.GreaterThanEqualsToken] = ['<', '>'],
    _a[ts.SyntaxKind.EqualsEqualsToken] = ['!='],
    _a[ts.SyntaxKind.ExclamationEqualsToken] = ['=='],
    _a[ts.SyntaxKind.EqualsEqualsEqualsToken] = ['!=='],
    _a[ts.SyntaxKind.ExclamationEqualsEqualsToken] = ['==='],
    _a[ts.SyntaxKind.BarBarToken] = ['&&'],
    _a[ts.SyntaxKind.AmpersandAmpersandToken] = ['||'],
    _a);
var BinaryExpressionMutator = /** @class */ (function (_super) {
    tslib_1.__extends(BinaryExpressionMutator, _super);
    function BinaryExpressionMutator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = 'BinaryExpression';
        return _this;
    }
    BinaryExpressionMutator.prototype.guard = function (node) {
        return node.kind === ts.SyntaxKind.BinaryExpression;
    };
    BinaryExpressionMutator.prototype.identifyReplacements = function (node) {
        if (replaceTokens[node.operatorToken.kind]) {
            return replaceTokens[node.operatorToken.kind]
                .map(function (replacement) { return ({ node: node.operatorToken, replacement: replacement }); });
        }
        else {
            return [];
        }
    };
    return BinaryExpressionMutator;
}(NodeMutator_1.default));
exports.default = BinaryExpressionMutator;
//# sourceMappingURL=BinaryExpressionMutator.js.map