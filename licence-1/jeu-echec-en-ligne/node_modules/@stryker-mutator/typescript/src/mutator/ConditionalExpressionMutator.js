"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ts = require("typescript");
var NodeMutator_1 = require("./NodeMutator");
var ConditionalExpressionMutator = /** @class */ (function (_super) {
    tslib_1.__extends(ConditionalExpressionMutator, _super);
    function ConditionalExpressionMutator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = 'ConditionalExpression';
        return _this;
    }
    ConditionalExpressionMutator.prototype.guard = function (node) {
        return node.kind === ts.SyntaxKind.BinaryExpression;
    };
    ConditionalExpressionMutator.prototype.isInvalidParent = function (parent) {
        switch (parent.kind) {
            case ts.SyntaxKind.IfStatement:
            case ts.SyntaxKind.ForStatement:
            case ts.SyntaxKind.WhileStatement:
            case ts.SyntaxKind.DoStatement:
            case ts.SyntaxKind.LiteralType:
                return true;
            default:
                return false;
        }
    };
    ConditionalExpressionMutator.prototype.isInvalidOperator = function (operatorToken) {
        switch (operatorToken.kind) {
            case ts.SyntaxKind.PlusToken:
            case ts.SyntaxKind.MinusToken:
            case ts.SyntaxKind.SlashToken:
            case ts.SyntaxKind.AsteriskToken:
            case ts.SyntaxKind.PercentToken:
                return true;
            default:
                return false;
        }
    };
    ConditionalExpressionMutator.prototype.identifyReplacements = function (node) {
        if ((node.parent && this.isInvalidParent(node.parent)) || this.isInvalidOperator(node.operatorToken)) {
            return [];
        }
        return [
            { node: node, replacement: 'false' },
            { node: node, replacement: 'true' }
        ];
    };
    return ConditionalExpressionMutator;
}(NodeMutator_1.default));
exports.default = ConditionalExpressionMutator;
//# sourceMappingURL=ConditionalExpressionMutator.js.map