import { File, StrykerOptions } from '@stryker-mutator/api/core';
import { Mutant } from '@stryker-mutator/api/mutant';
import NodeMutator from './mutator/NodeMutator';
import { Injector, OptionsContext } from '@stryker-mutator/api/plugin';
export declare function typescriptMutatorFactory(injector: Injector<OptionsContext>): TypescriptMutator;
export declare namespace typescriptMutatorFactory {
    var inject: ["$injector"];
}
export declare const MUTATORS_TOKEN = "mutators";
export declare class TypescriptMutator {
    private readonly options;
    mutators: ReadonlyArray<NodeMutator>;
    static inject: ["options", "mutators"];
    constructor(options: StrykerOptions, mutators: ReadonlyArray<NodeMutator>);
    mutate(inputFiles: File[]): Mutant[];
    private mutateForNode;
}
//# sourceMappingURL=TypescriptMutator.d.ts.map